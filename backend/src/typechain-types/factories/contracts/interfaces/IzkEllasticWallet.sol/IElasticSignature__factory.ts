/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IElasticSignature,
  IElasticSignatureInterface,
} from "../../../../contracts/interfaces/IzkEllasticWallet.sol/IElasticSignature";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pwdhash",
        type: "uint256",
      },
    ],
    name: "SetPassword",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "Verified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof1",
        type: "uint256[8]",
      },
      {
        internalType: "uint256",
        name: "expiration1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allhash1",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof2",
        type: "uint256[8]",
      },
      {
        internalType: "uint256",
        name: "pwdhash2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allhash2",
        type: "uint256",
      },
    ],
    name: "resetPassword",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256",
        name: "datahash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allhash",
        type: "uint256",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IElasticSignature__factory {
  static readonly abi = _abi;
  static createInterface(): IElasticSignatureInterface {
    return new utils.Interface(_abi) as IElasticSignatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IElasticSignature {
    return new Contract(address, _abi, signerOrProvider) as IElasticSignature;
  }
}
