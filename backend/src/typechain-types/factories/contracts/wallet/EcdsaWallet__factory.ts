/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EcdsaWallet,
  EcdsaWalletInterface,
} from "../../../contracts/wallet/EcdsaWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "entryPoint_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "user_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_concatenatedSignatures",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_ethSignedMessageHash",
        type: "bytes32",
      },
    ],
    name: "_extractSigners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_user",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610de7380380610de783398101604081905261002f9161007d565b6001600160a01b03928316608052600180549284166001600160a01b0319938416179055600280549190931691161790556100ca565b6001600160a01b038116811461007a57600080fd5b50565b60008060006060848603121561009257600080fd5b835161009d81610065565b60208501519093506100ae81610065565b60408501519092506100bf81610065565b809150509250925092565b608051610ce661010160003960008181610185015281816101e9015281816104d80152818161059001526106a00152610ce66000f3fe60806040526004361061007f5760003560e01c8063affed0e01161004e578063affed0e014610158578063b0d691fe14610176578063b61d27f6146101a9578063d087d288146101c957600080fd5b806318dfb3c71461008b5780633a871cdd146100ad578063891e1ee0146100e0578063aefef3241461011857600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610957565b6101de565b005b3480156100b957600080fd5b506100cd6100c83660046109c3565b61034e565b6040519081526020015b60405180910390f35b3480156100ec57600080fd5b50600254610100906001600160a01b031681565b6040516001600160a01b0390911681526020016100d7565b34801561012457600080fd5b50610138610133366004610a2d565b610374565b604080516001600160a01b039384168152929091166020830152016100d7565b34801561016457600080fd5b506000546001600160f81b03166100cd565b34801561018257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610100565b3480156101b557600080fd5b506100ab6101c4366004610afe565b6104cd565b3480156101d557600080fd5b506100cd61058c565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461025b5760405162461bcd60e51b815260206004820152601a60248201527f6163636f756e743a206e6f7420616e20456e747279506f696e7400000000000060448201526064015b60405180910390fd5b8281146102a05760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b6044820152606401610252565b60005b83811015610347576103358585838181106102c0576102c0610b85565b90506020020160208101906102d59190610b9b565b60008585858181106102e9576102e9610b85565b90506020028101906102fb9190610bb6565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061062592505050565b8061033f81610bfd565b9150506102a3565b5050505050565b6000610358610695565b610362848461070f565b905061036d82610819565b9392505050565b60008083516082146103d25760405162461bcd60e51b815260206004820152602160248201527f496e707574206279746573206d757374206265206f66206c656e6774682031336044820152600360fc1b6064820152608401610252565b60208481015160408087015160608089015160618a015160818b015160a18c0151865160008082529981018089528d905293891a968401879052938301879052608083018590529596939590939092811a9160019060a0016020604051602081039080840390855afa15801561044c573d6000803e3d6000fd5b505060408051601f198101516000808352602083018085528f905260ff8716938301939093526060820188905260808201879052935090915060019060a0016020604051602081039080840390855afa1580156104ad573d6000803e3d6000fd5b5050604051601f190151929a5091985050505050505050505b9250929050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105455760405162461bcd60e51b815260206004820152601a60248201527f6163636f756e743a206e6f7420616e20456e747279506f696e740000000000006044820152606401610252565b610586848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061062592505050565b50505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610c24565b905090565b600080846001600160a01b031684846040516106419190610c61565b60006040518083038185875af1925050503d806000811461067e576040519150601f19603f3d011682016040523d82523d6000602084013e610683565b606091505b50915091508161034757805160208201fd5b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461070d5760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610252565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812060008061078e610752610140880188610bb6565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250879250610374915050565b915091506107ba604051806040016040528060078152602001665369676e65727360c81b815250610866565b6107c3826108a9565b6107cc816108a9565b6001546001600160a01b0383811691161415806107f757506002546001600160a01b03828116911614155b156108085760019350505050610810565b600093505050505b92915050565b50565b801561081657604051600090339060001990849084818181858888f193505050503d8060008114610347576040519150601f19603f3d011682016040523d82523d6000602084013e610347565b6108168160405160240161087a9190610c7d565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526108ed565b6040516001600160a01b03821660248201526108169060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790525b6108168160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60008083601f84011261092457600080fd5b50813567ffffffffffffffff81111561093c57600080fd5b6020830191508360208260051b85010111156104c657600080fd5b6000806000806040858703121561096d57600080fd5b843567ffffffffffffffff8082111561098557600080fd5b61099188838901610912565b909650945060208701359150808211156109aa57600080fd5b506109b787828801610912565b95989497509550505050565b6000806000606084860312156109d857600080fd5b833567ffffffffffffffff8111156109ef57600080fd5b84016101608187031215610a0257600080fd5b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610a4057600080fd5b823567ffffffffffffffff80821115610a5857600080fd5b818501915085601f830112610a6c57600080fd5b813581811115610a7e57610a7e610a17565b604051601f8201601f19908116603f01168101908382118183101715610aa657610aa6610a17565b81604052828152886020848701011115610abf57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b80356001600160a01b0381168114610af957600080fd5b919050565b60008060008060608587031215610b1457600080fd5b610b1d85610ae2565b935060208501359250604085013567ffffffffffffffff80821115610b4157600080fd5b818701915087601f830112610b5557600080fd5b813581811115610b6457600080fd5b886020828501011115610b7657600080fd5b95989497505060200194505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610bad57600080fd5b61036d82610ae2565b6000808335601e19843603018112610bcd57600080fd5b83018035915067ffffffffffffffff821115610be857600080fd5b6020019150368190038213156104c657600080fd5b600060018201610c1d57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610c3657600080fd5b5051919050565b60005b83811015610c58578181015183820152602001610c40565b50506000910152565b60008251610c73818460208701610c3d565b9190910192915050565b6020815260008251806020840152610c9c816040850160208701610c3d565b601f01601f1916919091016040019291505056fea2646970667358221220033b565901b576b96a5494f05836d385f5ed4af7580cb1df6cd05bda2717992164736f6c63430008140033";

type EcdsaWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EcdsaWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EcdsaWallet__factory extends ContractFactory {
  constructor(...args: EcdsaWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    entryPoint_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    user_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EcdsaWallet> {
    return super.deploy(
      entryPoint_,
      owner_,
      user_,
      overrides || {}
    ) as Promise<EcdsaWallet>;
  }
  override getDeployTransaction(
    entryPoint_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    user_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      entryPoint_,
      owner_,
      user_,
      overrides || {}
    );
  }
  override attach(address: string): EcdsaWallet {
    return super.attach(address) as EcdsaWallet;
  }
  override connect(signer: Signer): EcdsaWallet__factory {
    return super.connect(signer) as EcdsaWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EcdsaWalletInterface {
    return new utils.Interface(_abi) as EcdsaWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EcdsaWallet {
    return new Contract(address, _abi, signerOrProvider) as EcdsaWallet;
  }
}
